/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package ooad_6;

import javax.swing.JOptionPane;

/**
 *
 * @author vandana
 */
public class UI extends javax.swing.JFrame {

    /**
     * Creates new form UI
     */
    String selectedModel = "";

    public UI() {
        initComponents();
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        SelectModel = new javax.swing.JComboBox<>();
        jTextField1 = new javax.swing.JTextField();
        V8Engine = new javax.swing.JCheckBox();
        V12Engine = new javax.swing.JCheckBox();
        PumaSkinSeats = new javax.swing.JCheckBox();
        SealSkinSeats = new javax.swing.JCheckBox();
        KomodoDragonSkinSeats = new javax.swing.JCheckBox();
        SunRoof = new javax.swing.JCheckBox();
        freeFirstOilChange = new javax.swing.JCheckBox();
        order = new javax.swing.JButton();
        spareTire = new javax.swing.JCheckBox();
        radio = new javax.swing.JCheckBox();
        cupHolders = new javax.swing.JCheckBox();
        gasTank = new javax.swing.JCheckBox();
        towingPackage = new javax.swing.JCheckBox();
        jScrollPane1 = new javax.swing.JScrollPane();
        display = new javax.swing.JTextArea();
        jTextField2 = new javax.swing.JTextField();
        jScrollPane2 = new javax.swing.JScrollPane();
        q_freeOil = new javax.swing.JTextPane();
        jScrollPane3 = new javax.swing.JScrollPane();
        q_spareTire = new javax.swing.JTextPane();
        jScrollPane4 = new javax.swing.JScrollPane();
        q_cupHolder = new javax.swing.JTextPane();
        jScrollPane5 = new javax.swing.JScrollPane();
        q_tank = new javax.swing.JTextPane();
        jScrollPane6 = new javax.swing.JScrollPane();
        q_radio = new javax.swing.JTextPane();
        jScrollPane7 = new javax.swing.JScrollPane();
        q_towing = new javax.swing.JTextPane();
        jTextField3 = new javax.swing.JTextField();
        jScrollPane8 = new javax.swing.JScrollPane();
        q_v8 = new javax.swing.JTextPane();
        jScrollPane9 = new javax.swing.JScrollPane();
        q_v12 = new javax.swing.JTextPane();
        jScrollPane10 = new javax.swing.JScrollPane();
        q_puma = new javax.swing.JTextPane();
        jScrollPane11 = new javax.swing.JScrollPane();
        q_seal = new javax.swing.JTextPane();
        jScrollPane12 = new javax.swing.JScrollPane();
        q_komodo = new javax.swing.JTextPane();
        jScrollPane13 = new javax.swing.JScrollPane();
        q_sunroof = new javax.swing.JTextPane();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);

        SelectModel.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { "", "C", "CS", "E" }));
        SelectModel.setCursor(new java.awt.Cursor(java.awt.Cursor.DEFAULT_CURSOR));
        SelectModel.addItemListener(new java.awt.event.ItemListener() {
            public void itemStateChanged(java.awt.event.ItemEvent evt) {
                SelectModelItemStateChanged(evt);
            }
        });
        SelectModel.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                SelectModelMouseClicked(evt);
            }
        });
        SelectModel.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                SelectModelActionPerformed(evt);
            }
        });

        jTextField1.setText("Select a Model");
        jTextField1.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jTextField1ActionPerformed(evt);
            }
        });

        V8Engine.setText("V-8 Engine");
        V8Engine.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                V8EngineActionPerformed(evt);
            }
        });

        V12Engine.setText("V-12 Engine");
        V12Engine.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                V12EngineActionPerformed(evt);
            }
        });

        PumaSkinSeats.setText("Puma Skin Seats");
        PumaSkinSeats.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                PumaSkinSeatsActionPerformed(evt);
            }
        });

        SealSkinSeats.setText("Seal Skin Seats");
        SealSkinSeats.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                SealSkinSeatsActionPerformed(evt);
            }
        });

        KomodoDragonSkinSeats.setText("Komodo Dragon Skin Seats");
        KomodoDragonSkinSeats.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                KomodoDragonSkinSeatsActionPerformed(evt);
            }
        });

        SunRoof.setText("Sun Roof");

        freeFirstOilChange.setText("Free First Oil Change");

        order.setText("Place an order");
        order.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                orderActionPerformed(evt);
            }
        });

        spareTire.setText("Spare Tire");

        radio.setText("Blaupunkt New York 800 Radio");

        cupHolders.setText("Cup Holders");

        gasTank.setText("Oversized Gas Tank");

        towingPackage.setText("Towing Package");

        display.setColumns(20);
        display.setRows(5);
        jScrollPane1.setViewportView(display);

        jTextField2.setText("Enter Quantity");
        jTextField2.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jTextField2ActionPerformed(evt);
            }
        });

        jScrollPane2.setViewportView(q_freeOil);

        jScrollPane3.setViewportView(q_spareTire);

        jScrollPane4.setViewportView(q_cupHolder);

        jScrollPane5.setViewportView(q_tank);

        jScrollPane6.setViewportView(q_radio);

        jScrollPane7.setViewportView(q_towing);

        jTextField3.setText("Enter Quantity");
        jTextField3.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jTextField3ActionPerformed(evt);
            }
        });

        jScrollPane8.setViewportView(q_v8);

        jScrollPane9.setViewportView(q_v12);

        jScrollPane10.setViewportView(q_puma);

        jScrollPane11.setViewportView(q_seal);

        jScrollPane12.setViewportView(q_komodo);

        jScrollPane13.setViewportView(q_sunroof);

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGap(70, 70, 70)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jTextField1, javax.swing.GroupLayout.PREFERRED_SIZE, 130, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(SelectModel, javax.swing.GroupLayout.PREFERRED_SIZE, 140, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addGroup(layout.createSequentialGroup()
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                            .addGroup(layout.createSequentialGroup()
                                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                    .addComponent(V8Engine)
                                    .addComponent(V12Engine)
                                    .addComponent(PumaSkinSeats)
                                    .addComponent(SealSkinSeats)
                                    .addComponent(KomodoDragonSkinSeats)
                                    .addComponent(SunRoof))
                                .addGap(83, 113, Short.MAX_VALUE)
                                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                    .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                                        .addGroup(layout.createSequentialGroup()
                                            .addComponent(jScrollPane9, javax.swing.GroupLayout.PREFERRED_SIZE, 51, javax.swing.GroupLayout.PREFERRED_SIZE)
                                            .addGap(1, 1, 1))
                                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                            .addComponent(jScrollPane13, javax.swing.GroupLayout.PREFERRED_SIZE, 47, javax.swing.GroupLayout.PREFERRED_SIZE)
                                            .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                                                .addComponent(jScrollPane8, javax.swing.GroupLayout.PREFERRED_SIZE, 50, javax.swing.GroupLayout.PREFERRED_SIZE)
                                                .addComponent(jScrollPane10, javax.swing.GroupLayout.DEFAULT_SIZE, 51, Short.MAX_VALUE)
                                                .addComponent(jScrollPane11)
                                                .addComponent(jScrollPane12, javax.swing.GroupLayout.PREFERRED_SIZE, 48, javax.swing.GroupLayout.PREFERRED_SIZE))))
                                    .addGroup(layout.createSequentialGroup()
                                        .addGap(2, 2, 2)
                                        .addComponent(order))))
                            .addGroup(layout.createSequentialGroup()
                                .addGap(0, 0, Short.MAX_VALUE)
                                .addComponent(jTextField3, javax.swing.GroupLayout.PREFERRED_SIZE, 118, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addGap(1, 1, 1)))
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(jTextField2, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.PREFERRED_SIZE, 118, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addGroup(layout.createSequentialGroup()
                                .addGap(86, 86, 86)
                                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                    .addGroup(layout.createSequentialGroup()
                                        .addComponent(gasTank)
                                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                        .addComponent(jScrollPane5, javax.swing.GroupLayout.PREFERRED_SIZE, 60, javax.swing.GroupLayout.PREFERRED_SIZE))
                                    .addGroup(layout.createSequentialGroup()
                                        .addComponent(cupHolders)
                                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                        .addComponent(jScrollPane4, javax.swing.GroupLayout.PREFERRED_SIZE, 60, javax.swing.GroupLayout.PREFERRED_SIZE))
                                    .addGroup(layout.createSequentialGroup()
                                        .addComponent(towingPackage)
                                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                        .addComponent(jScrollPane7, javax.swing.GroupLayout.PREFERRED_SIZE, 61, javax.swing.GroupLayout.PREFERRED_SIZE))
                                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                            .addGroup(layout.createSequentialGroup()
                                                .addComponent(spareTire)
                                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                                            .addGroup(layout.createSequentialGroup()
                                                .addComponent(freeFirstOilChange)
                                                .addGap(129, 129, 129)))
                                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                            .addComponent(jScrollPane2, javax.swing.GroupLayout.PREFERRED_SIZE, 60, javax.swing.GroupLayout.PREFERRED_SIZE)
                                            .addComponent(jScrollPane3, javax.swing.GroupLayout.PREFERRED_SIZE, 60, javax.swing.GroupLayout.PREFERRED_SIZE)))
                                    .addGroup(layout.createSequentialGroup()
                                        .addComponent(radio)
                                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                        .addComponent(jScrollPane6, javax.swing.GroupLayout.PREFERRED_SIZE, 50, javax.swing.GroupLayout.PREFERRED_SIZE)))))))
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
            .addGroup(layout.createSequentialGroup()
                .addGap(129, 129, 129)
                .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 549, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGap(46, 46, 46)
                .addComponent(jTextField1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(35, 35, 35)
                .addComponent(SelectModel, javax.swing.GroupLayout.PREFERRED_SIZE, 39, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(47, 47, 47)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jTextField3, javax.swing.GroupLayout.PREFERRED_SIZE, 22, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jTextField2, javax.swing.GroupLayout.PREFERRED_SIZE, 22, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(52, 52, 52)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createSequentialGroup()
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(freeFirstOilChange)
                            .addComponent(V8Engine)
                            .addComponent(jScrollPane8, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(layout.createSequentialGroup()
                                .addGap(30, 30, 30)
                                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                                    .addComponent(spareTire)
                                    .addComponent(jScrollPane3, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)))
                            .addGroup(layout.createSequentialGroup()
                                .addGap(18, 18, 18)
                                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                                    .addComponent(jScrollPane9, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                                    .addComponent(V12Engine))))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                            .addGroup(layout.createSequentialGroup()
                                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                                    .addGroup(layout.createSequentialGroup()
                                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                                            .addComponent(radio)
                                            .addComponent(jScrollPane10, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                            .addComponent(cupHolders)
                                            .addComponent(jScrollPane11, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)))
                                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                                        .addComponent(jScrollPane6, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                                        .addComponent(jScrollPane4, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)))
                                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                    .addGroup(layout.createSequentialGroup()
                                        .addGap(18, 18, 18)
                                        .addComponent(gasTank)
                                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                                    .addGroup(layout.createSequentialGroup()
                                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                            .addComponent(jScrollPane5, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                                            .addComponent(jScrollPane12, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)))
                                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                                    .addComponent(towingPackage)
                                    .addComponent(jScrollPane7, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                                    .addComponent(jScrollPane13, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)))
                            .addGroup(layout.createSequentialGroup()
                                .addComponent(PumaSkinSeats)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                                .addComponent(SealSkinSeats)
                                .addGap(18, 18, 18)
                                .addComponent(KomodoDragonSkinSeats)
                                .addGap(18, 18, 18)
                                .addComponent(SunRoof))))
                    .addComponent(jScrollPane2, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 39, Short.MAX_VALUE)
                .addComponent(order)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 159, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap())
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void jTextField1ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jTextField1ActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_jTextField1ActionPerformed

    private void SelectModelActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_SelectModelActionPerformed
        selectedModel = SelectModel.getSelectedItem().toString();

    }//GEN-LAST:event_SelectModelActionPerformed

    private void SelectModelMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_SelectModelMouseClicked
        // TODO add your handling code here:
    }//GEN-LAST:event_SelectModelMouseClicked

    private void V8EngineActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_V8EngineActionPerformed
        if (selectedModel.equals("E") || selectedModel.equals("CS")) {
            JOptionPane.showMessageDialog(null, "V-8 Engine is not available for Model CS and E");
            V8Engine.setSelected(false);
        }

    }//GEN-LAST:event_V8EngineActionPerformed

    private void orderActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_orderActionPerformed

        if (SelectModel.getSelectedIndex() == 0) {
            JOptionPane.showMessageDialog(null, "Please Select a Model");
        }

        if (selectedModel.equals("C")) {
            
            Component component = new C();
            if (freeFirstOilChange.isSelected()) {
                int q=0;
                if(!q_freeOil.getText().equals("")){
                    q=Integer.parseInt(q_freeOil.getText());
                    for(int i=0;i<q;i++)
                component = new FreeFirstOilChange(component);
                }
                else{
                     component = new FreeFirstOilChange(component);
                }      
            }
            if (spareTire.isSelected()) {
                int q=0;
                if(!q_spareTire.getText().equals("")){
                    q=Integer.parseInt(q_spareTire.getText());
                    for(int i=0;i<q;i++)
                 component = new SpareTire(component);
                }
                else{
                     component = new SpareTire(component);
                }  
               
            }
            if (radio.isSelected()) {
                int q=0;
                if(!q_radio.getText().equals("")){
                    q=Integer.parseInt(q_radio.getText());
                    for(int i=0;i<q;i++)
                 component = new Radio(component);
                }
                else{
                     component = new Radio(component);
                }  
               
            }
            if (cupHolders.isSelected()) {
                  int q=0;
                if(!q_cupHolder.getText().equals("")){
                    q=Integer.parseInt(q_cupHolder.getText());
                    for(int i=0;i<q;i++)
                 component = new CupHolder(component);
                }
                else{
                     component = new CupHolder(component);
                } 
                
            }
            if (gasTank.isSelected()) {
                int q=0;
                if(!q_tank.getText().equals("")){
                    q=Integer.parseInt(q_tank.getText());
                    for(int i=0;i<q;i++)
                  component = new GasTank(component);
                }
                else{
                      component = new GasTank(component);
                } 
               
            }
            if (towingPackage.isSelected()) {
                int q=0;
                if(!q_towing.getText().equals("")){
                    q=Integer.parseInt(q_towing.getText());
                    for(int i=0;i<q;i++)
                   component = new TowingPackage(component);
                }
                else{
                       component = new TowingPackage(component);
                } 
               
            }
            if (SunRoof.isSelected()) {
                 int q=0;
                if(!q_sunroof.getText().equals("")){
                    q=Integer.parseInt(q_sunroof.getText());
                    for(int i=0;i<q;i++)
                 component = new SunRoof(component,"C");
                }
                else{
                      component = new SunRoof(component,"C");
                } 
                
                
            }
            if (V8Engine.isSelected()) {
                 int q=0;
                if(!q_v8.getText().equals("")){
                    q=Integer.parseInt(q_v8.getText());
                    for(int i=0;i<q;i++)
                  component = new V8Engine(component);
                }
                else{
                      component = new V8Engine(component);
                } 
              
            }
            if (SealSkinSeats.isSelected()) {
                 int q=0;
                if(!q_seal.getText().equals("")){
                    q=Integer.parseInt(q_seal.getText());
                    for(int i=0;i<q;i++)
                  component = new SealSkinSeats(component);
                }
                else{
                      component = new SealSkinSeats(component);
                } 
                
            }

            System.out.println("Total Cost for " + component.name() + " is " + "$ " + component.cost());

            display.setText("Total Cost for " + component.name() + " is " + "$ " + component.cost());

        } else if (selectedModel.equals("CS")) {
            Component component = new CS();
            if (freeFirstOilChange.isSelected()) {
                int q=0;
                if(!q_freeOil.getText().equals("")){
                    q=Integer.parseInt(q_freeOil.getText());
                    for(int i=0;i<q;i++)
                component = new FreeFirstOilChange(component);
                }
                else{
                     component = new FreeFirstOilChange(component);
                }      
            }
            if (spareTire.isSelected()) {
                int q=0;
                if(!q_spareTire.getText().equals("")){
                    q=Integer.parseInt(q_spareTire.getText());
                    for(int i=0;i<q;i++)
                 component = new SpareTire(component);
                }
                else{
                     component = new SpareTire(component);
                }  
               
            }
            if (radio.isSelected()) {
                int q=0;
                if(!q_radio.getText().equals("")){
                    q=Integer.parseInt(q_radio.getText());
                    for(int i=0;i<q;i++)
                 component = new Radio(component);
                }
                else{
                     component = new Radio(component);
                }  
               
            }
            if (cupHolders.isSelected()) {
                  int q=0;
                if(!q_cupHolder.getText().equals("")){
                    q=Integer.parseInt(q_cupHolder.getText());
                    for(int i=0;i<q;i++)
                 component = new CupHolder(component);
                }
                else{
                     component = new CupHolder(component);
                } 
                
            }
            if (gasTank.isSelected()) {
                int q=0;
                if(!q_tank.getText().equals("")){
                    q=Integer.parseInt(q_tank.getText());
                    for(int i=0;i<q;i++)
                  component = new GasTank(component);
                }
                else{
                      component = new GasTank(component);
                } 
               
            }
            if (towingPackage.isSelected()) {
                int q=0;
                if(!q_towing.getText().equals("")){
                    q=Integer.parseInt(q_towing.getText());
                    for(int i=0;i<q;i++)
                   component = new TowingPackage(component);
                }
                else{
                       component = new TowingPackage(component);
                } 
               
            }
            if (SunRoof.isSelected()) {
                int q=0;
                if(!q_sunroof.getText().equals("")){
                    q=Integer.parseInt(q_sunroof.getText());
                    for(int i=0;i<q;i++)
                 component = new SunRoof(component,"CS");
                }
                else{
                      component = new SunRoof(component,"CS");
                } 
            }
            if (V12Engine.isSelected()) {
                int q=0;
                if(!q_v12.getText().equals("")){
                    q=Integer.parseInt(q_v12.getText());
                    for(int i=0;i<q;i++)
                  component = new V12Engine(component);
                }
                else{
                      component = new V12Engine(component);
                } 
            }
            if (KomodoDragonSkinSeats.isSelected()) {
                 int q=0;
                if(!q_komodo.getText().equals("")){
                    q=Integer.parseInt(q_komodo.getText());
                    for(int i=0;i<q;i++)
                  component = new KomodoDragonSkinSeats(component);
                }
                else{
                       component = new KomodoDragonSkinSeats(component);
                } 
               
            }
            System.out.println("Total Cost for " + component.name() + " is " + "$ " + component.cost());
            display.setText("Total Cost for " + component.name() + " is " + "$ " + component.cost());
        } else if (selectedModel.equals("E")) {
            Component component = new E();
           if (freeFirstOilChange.isSelected()) {
                int q=0;
                if(!q_freeOil.getText().equals("")){
                    q=Integer.parseInt(q_freeOil.getText());
                    for(int i=0;i<q;i++)
                component = new FreeFirstOilChange(component);
                }
                else{
                     component = new FreeFirstOilChange(component);
                }      
            }
            if (spareTire.isSelected()) {
                int q=0;
                if(!q_spareTire.getText().equals("")){
                    q=Integer.parseInt(q_spareTire.getText());
                    for(int i=0;i<q;i++)
                 component = new SpareTire(component);
                }
                else{
                     component = new SpareTire(component);
                }  
               
            }
            if (radio.isSelected()) {
                int q=0;
                if(!q_radio.getText().equals("")){
                    q=Integer.parseInt(q_radio.getText());
                    for(int i=0;i<q;i++)
                 component = new Radio(component);
                }
                else{
                     component = new Radio(component);
                }  
               
            }
            if (cupHolders.isSelected()) {
                  int q=0;
                if(!q_cupHolder.getText().equals("")){
                    q=Integer.parseInt(q_cupHolder.getText());
                    for(int i=0;i<q;i++)
                 component = new CupHolder(component);
                }
                else{
                     component = new CupHolder(component);
                } 
                
            }
            if (gasTank.isSelected()) {
                int q=0;
                if(!q_tank.getText().equals("")){
                    q=Integer.parseInt(q_tank.getText());
                    for(int i=0;i<q;i++)
                  component = new GasTank(component);
                }
                else{
                      component = new GasTank(component);
                } 
               
            }
            if (towingPackage.isSelected()) {
                int q=0;
                if(!q_towing.getText().equals("")){
                    q=Integer.parseInt(q_towing.getText());
                    for(int i=0;i<q;i++)
                   component = new TowingPackage(component);
                }
                else{
                       component = new TowingPackage(component);
                } 
               
            }
            if (SunRoof.isSelected()) {
                 int q=0;
                if(!q_sunroof.getText().equals("")){
                    q=Integer.parseInt(q_sunroof.getText());
                    for(int i=0;i<q;i++)
                 component = new SunRoof(component,"E");
                }
                else{
                      component = new SunRoof(component,"E");
                } 
            }
            if (V12Engine.isSelected()) {
                int q=0;
                if(!q_v12.getText().equals("")){
                    q=Integer.parseInt(q_v12.getText());
                    for(int i=0;i<q;i++)
                  component = new V12Engine(component);
                }
                else{
                      component = new V12Engine(component);
                } 
            }
            if (PumaSkinSeats.isSelected()) {
                 int q=0;
                if(!q_puma.getText().equals("")){
                    q=Integer.parseInt(q_puma.getText());
                    for(int i=0;i<q;i++)
                   component = new PumaSkinSeats(component);
                }
                else{
                       component = new PumaSkinSeats(component);
                } 
               
            }
            System.out.println("Total Cost for " + component.name() + " is " + "$ " + component.cost());
            display.setText("Total Cost for " + component.name() + " is " + "$ " + component.cost());
        }

    }//GEN-LAST:event_orderActionPerformed

    private void V12EngineActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_V12EngineActionPerformed
        if (selectedModel.equals("C")) {
            JOptionPane.showMessageDialog(null, "V-12 Engine is not available for Model C");
            V12Engine.setSelected(false);
        }
    }//GEN-LAST:event_V12EngineActionPerformed

    private void PumaSkinSeatsActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_PumaSkinSeatsActionPerformed
        if (!selectedModel.equals("E")) {
            JOptionPane.showMessageDialog(null, "Puma Skin Seats is only available for Model E");
            PumaSkinSeats.setSelected(false);
        }
    }//GEN-LAST:event_PumaSkinSeatsActionPerformed

    private void SealSkinSeatsActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_SealSkinSeatsActionPerformed
        if (!selectedModel.equals("C")) {
            JOptionPane.showMessageDialog(null, "Seal Skin Seats is only available for Model C");
            SealSkinSeats.setSelected(false);
        }
    }//GEN-LAST:event_SealSkinSeatsActionPerformed

    private void KomodoDragonSkinSeatsActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_KomodoDragonSkinSeatsActionPerformed
        if (!selectedModel.equals("CS")) {
            JOptionPane.showMessageDialog(null, "Komodo Dragon Skin Seats is only available for Model CS");
            KomodoDragonSkinSeats.setSelected(false);
        }
    }//GEN-LAST:event_KomodoDragonSkinSeatsActionPerformed

    private void SelectModelItemStateChanged(java.awt.event.ItemEvent evt) {//GEN-FIRST:event_SelectModelItemStateChanged
        V8Engine.setSelected(false);
        V12Engine.setSelected(false);
        PumaSkinSeats.setSelected(false);
        SealSkinSeats.setSelected(false);
        KomodoDragonSkinSeats.setSelected(false);
        SunRoof.setSelected(false);
        freeFirstOilChange.setSelected(false);
        spareTire.setSelected(false);
        radio.setSelected(false);
        cupHolders.setSelected(false);
        gasTank.setSelected(false);
        towingPackage.setSelected(false);
    }//GEN-LAST:event_SelectModelItemStateChanged

    private void jTextField2ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jTextField2ActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_jTextField2ActionPerformed

    private void jTextField3ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jTextField3ActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_jTextField3ActionPerformed

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {

        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(UI.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(UI.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(UI.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(UI.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new UI().setVisible(true);
            }
        });
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JCheckBox KomodoDragonSkinSeats;
    private javax.swing.JCheckBox PumaSkinSeats;
    private javax.swing.JCheckBox SealSkinSeats;
    private javax.swing.JComboBox<String> SelectModel;
    private javax.swing.JCheckBox SunRoof;
    private javax.swing.JCheckBox V12Engine;
    private javax.swing.JCheckBox V8Engine;
    private javax.swing.JCheckBox cupHolders;
    private javax.swing.JTextArea display;
    private javax.swing.JCheckBox freeFirstOilChange;
    private javax.swing.JCheckBox gasTank;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JScrollPane jScrollPane10;
    private javax.swing.JScrollPane jScrollPane11;
    private javax.swing.JScrollPane jScrollPane12;
    private javax.swing.JScrollPane jScrollPane13;
    private javax.swing.JScrollPane jScrollPane2;
    private javax.swing.JScrollPane jScrollPane3;
    private javax.swing.JScrollPane jScrollPane4;
    private javax.swing.JScrollPane jScrollPane5;
    private javax.swing.JScrollPane jScrollPane6;
    private javax.swing.JScrollPane jScrollPane7;
    private javax.swing.JScrollPane jScrollPane8;
    private javax.swing.JScrollPane jScrollPane9;
    private javax.swing.JTextField jTextField1;
    private javax.swing.JTextField jTextField2;
    private javax.swing.JTextField jTextField3;
    private javax.swing.JButton order;
    private javax.swing.JTextPane q_cupHolder;
    private javax.swing.JTextPane q_freeOil;
    private javax.swing.JTextPane q_komodo;
    private javax.swing.JTextPane q_puma;
    private javax.swing.JTextPane q_radio;
    private javax.swing.JTextPane q_seal;
    private javax.swing.JTextPane q_spareTire;
    private javax.swing.JTextPane q_sunroof;
    private javax.swing.JTextPane q_tank;
    private javax.swing.JTextPane q_towing;
    private javax.swing.JTextPane q_v12;
    private javax.swing.JTextPane q_v8;
    private javax.swing.JCheckBox radio;
    private javax.swing.JCheckBox spareTire;
    private javax.swing.JCheckBox towingPackage;
    // End of variables declaration//GEN-END:variables
}
